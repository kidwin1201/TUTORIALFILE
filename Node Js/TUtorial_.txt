 import 
var http = require('http');

create a server
http.createServer(function (req, res) {
    res.writeHead(200, {'Content-Type': 'text/html'});
    res.end('Hello World!');
}).listen(8080);
------------------------------------------------------------------------------
Create module
exports.myDateTime = function () {
    return Date();
};
include created module

var http = require('http');
var dt = require('./myfirstmodule');

http.createServer(function (req, res) {
    res.writeHead(200, {'Content-Type': 'text/html'});
    res.write("The date and time are currently: " + dt.myDateTime());
    res.end();
}).listen(8080);
-------------------------------------------------------------------------------
create http
var http = require('http');

//create a server object:
http.createServer(function (req, res) {
  res.write('Hello World!'); //write a response to the client
  res.end(); //end the response
}).listen(8080); //the server object listens on port 8080
--------------------------------------------------------------------------------

Add an HTTP Header
If the response from the HTTP server is supposed to be displayed as HTML
, you should include an HTTP header with the correct content type:

http.createServer(function (req, res) {
  res.write('Hello World!'); //write a response to the client
  res.end(); //end the response
}).listen(8080); //the server object listens on port 8080
--------------------------------------------------------------------------------
get url from request
var http = require('http');
http.createServer(function (req, res) {
    res.writeHead(200, {'Content-Type': 'text/html'});
    res.write(req.url);
    res.end();
}).listen(8080);
--------------------------------------------------------------------------------
Parse url
var http = require('http');
var url = require('url');

http.createServer(function (req, res){
   res.writeHead(200,{'Content-Type':'text/html'});
   var q = url.parse(req.url, true).query;
   var txt = q.year + " " +q.month;
   res.end(txt);
}).listen(8080);
-------------------------------------------------------------------------------
Read file 

var http = require('http');
var fs = require('fs');
http.createServer(function (req, res) {
  fs.readFile('demofile1.html', function(err, data) {
    res.writeHead(200, {'Content-Type': 'text/html'});
    res.write(data);
    res.end();
  });
}).listen(8080);
this read an html file to return a website
-------------------------------------------------------------------------------
Create file

var fs = require('fs');

fs.appendFile('mynewfile1.txt', 'Hello content!', function (err) {
  if (err) throw err;
  console.log('Saved!');
});
The fs.appendFile() method appends specified content to a file. If the file does not exist, the file will be created

------------------------------------------------------------------------------
Create a new empty file
var fs = require('fs');
The fs.appendFile() method appends the specified content at the end of the specified file

fs.open('mynewfile2.txt', 'w', function (err, file) {
  if (err) throw err;
  console.log('Saved!');
});
The fs.open() method takes a "flag" as the second argument, if the flag is "w" for "writing", 
the specified file is opened for writing. If the file does not exist, an empty file is created

The fs.writeFile() method replaces the specified file and content if it exists. 
If the file does not exist, a new file, containing the specified content, will be created:
var fs = require('fs');

fs.writeFile('mynewfile3.txt', 'Hello content!', function (err) {
  if (err) throw err;
  console.log('Saved!');
});

-----------------------------------------------------------------------------
Update file

The fs.appendFile() method appends the specified content at the end of the specified file

The fs.writeFile() method replaces the specified file and content

var fs = require('fs');

fs.appendFile('mynewfile1.txt', ' This is my text.', function (err) {
  if (err) throw err;
  console.log('Updated!');
});

var fs = require('fs');

fs.writeFile('mynewfile3.txt', 'This is my text', function (err) {
  if (err) throw err;
  console.log('Replaced!');
});
----------------------------------------------------------------------------
Delete file

The fs.unlink() method deletes the specified file

var fs = require('fs');

fs.unlink('mynewfile2.txt', function (err) {
  if (err) throw err;
  console.log('File deleted!');
});
----------------------------------------------------------------------------
NPM-node package manage

Download at : https://www.npmjs.com/
put at all file in the same folder with the node file
npm install upper-case
Using:
var uc = require('upper-case');

Example:
var http = require('http');
var uc = require('upper-case');
http.createServer(function (req, res) {
    res.writeHead(200, {'Content-Type': 'text/html'});
    res.write(uc("Hello World!"));
    res.end();
}).listen(8080);	
----------------------------------------------------------------------------
Event:

var events = require('events');
var eventEmitter = new events.EventEmitter();

//Create an event handler:
var myEventHandler = function () {
  console.log('I hear a scream!');
}

//Assign the event handler to an event:
eventEmitter.on('scream', myEventHandler);

//Fire the 'scream' event:
eventEmitter.emit('scream');

Example:

var events = require('events');
var eventEmitter = new events.EventEmitter();
var http = require('http');

var myEventHandler = function(){
 console.log('A user connected!');
}
eventEmitter.on('scream',myEventHandler);


http.createServer(function (req,res){
 res.writeHead(200,{'Content-Type':'text/html'});
 res.write("Hello client");
 eventEmitter.emit('scream'); 
}).listen(8080)

console.log("Connected");

this node will display a log on console when a user connect to port 8080
------------------------------------------------------------------------------
Upload file
Formidable module